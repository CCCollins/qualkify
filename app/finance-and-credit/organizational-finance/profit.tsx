import { useState } from 'react';
import { TbTrash } from 'react-icons/tb';
import { input, parse, safe } from './utils';

export default function ProfitComponent() {
    const [precision, setPrecision] = useState(4);

    // Profit tax state
    const [revenue, setRevenue] = useState('');
    const [indirect, setIndirect] = useState('');
    const [cost, setCost] = useState('');
    const [mgmt, setMgmt] = useState('');
    const [comm, setComm] = useState('');
    const [nonOpInc, setNonOpInc] = useState('');
    const [nonOpExp, setNonOpExp] = useState('');
    const [taxes, setTaxes] = useState('');
    const [funds, setFunds] = useState('');

    const [useDetailedCost, setUseDetailedCost] = useState(false);

    // –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ø–æ–ª—è
    const [initAO, setAO] = useState('');
    const [materialCost, setMaterialCost] = useState('');
    const [waste, setWaste] = useState('');
    const [salaryFund, setSalaryFund] = useState('');
    const [socialRate, setSocialRate] = useState('30');
    const [creditAmount, setCreditAmount] = useState('');
    const [creditRate, setCreditRate] = useState('');
    const [creditMonths, setCreditMonths] = useState('');
    
    const p = parse;
  
    const AO = p(initAO);
    const MZ = p(materialCost) - p(waste);
    const FOT = p(salaryFund);
    const OSN = FOT * p(socialRate) / 100;
    const PR = p(creditAmount) * (p(creditRate) / 100) * (p(creditMonths) / 12);
    const detailedCost = AO + MZ + FOT + OSN + PR;
  
    const effectiveCost = useDetailedCost ? detailedCost : p(cost);
  
    const vr = p(revenue);
    const kn = p(indirect);
    const ur = p(mgmt);
    const kr = p(comm);
    const dvo = p(nonOpInc);
    const rvo = p(nonOpExp);
    const taxSum = p(taxes);
    const deductions = p(funds);
  
    const vp = vr - kn - effectiveCost;
    const pp = vp - ur - kr;
    const deltaVO = dvo - rvo;
    const preTax = pp + deltaVO;
    const np = preTax - taxSum;
    const unrealized = np - deductions;
  
    // –û–ø—Ç–æ–≤–∞—è —Ü–µ–Ω–∞: —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å + —á–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å + –ù–î–°
    const vat = taxSum;
    const wholesalePrice = effectiveCost + pp + vat;

    const scale = vr > 0 ? 100 / vr : 0;
    const npWidth = np * scale;
    const wholesaleWidth = wholesalePrice * scale;
  
    const formulas = {
      vp: `–í–ü = –í–† - –ö–ù - –°–° = ${safe(vr, precision)} - ${safe(kn, precision)} - ${safe(effectiveCost, precision)} = ${safe(vp, precision)}`,
      pp: `–ü–ü = –í–ü - –£–† - –ö–† = ${safe(vp, precision)} - ${safe(ur, precision)} - ${safe(kr, precision)} = ${safe(pp, precision)}`,
      deltaVO: `Œî–í–û = –î–í–û - –†–í–û = ${safe(dvo, precision)} - ${safe(rvo, precision)} = ${safe(deltaVO, precision)}`,
      preTax: `–ü –¥–æ –Ω/–æ = –ü–ü ¬± Œî–í–û = ${safe(pp, precision)} + ${safe(deltaVO, precision)} = ${safe(preTax, precision)}`,
      np: `–ß–ü = –ü –¥–æ –Ω/–æ - ‚àë–ù = ${safe(preTax, precision)} - ${safe(taxSum, precision)} = ${safe(np, precision)}`,
      unrealized: `–ù–µ—Ä–ü = –ß–ü - –§ = ${safe(np, precision)} - ${safe(deductions, precision)} = ${safe(unrealized, precision)}`,
      wholesale: `–û–ø–¶ = –°–° + –ü–ü + –ù–î–° = ${safe(effectiveCost, precision)} + ${safe(pp, precision)} + ${safe(vat, precision)} = ${safe(wholesalePrice, precision)}`
    };
    
    const formulasCost = {
      MZ: `–ú–ó = –†√óQ ‚àí P–æ—Ç—Ö√óQ–æ—Ç—Ö = ${safe(p(materialCost), precision)} - ${safe(p(waste), precision)} = ${safe(MZ, precision)}`,
      OSN: `–û–°–ù = –§–û–¢ √ó –°—Ç = ${safe(FOT, precision)} √ó ${safe(p(socialRate), precision)}% = ${safe(OSN, precision)}`,
      PR: `–ü–õ = ${safe(p(creditAmount), precision)} √ó (${safe(p(creditRate), precision)}% √ó ${safe(p(creditMonths), precision)} / 12) = ${safe(PR, precision)}`,
      cost: `–°–° = –ê–û + –ú–ó + –§–û–¢ + –û–°–ù + –ü–õ = ${safe(AO, precision)} + ${safe(MZ, precision)} + ${safe(FOT, precision)} + ${safe(OSN, precision)} + ${safe(PR, precision)} = ${safe(detailedCost, precision)}`
    };

    const resetFields = () => {
      setRevenue('');
      setIndirect('');
      setCost('');
      setMgmt('');
      setComm('');
      setNonOpInc('');
      setNonOpExp('');
      setTaxes('');
      setFunds('');
    
      // –î–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ:
      setMaterialCost('');
      setWaste('');
      setSalaryFund('');
      setSocialRate('30');
      setCreditAmount('');
      setCreditRate('');
      setCreditMonths('');
    };
  
    return (
      <>
        <h2 className="text-xl font-bold mb-3">–ü—Ä–∏–±—ã–ª—å –∏ –Ω–∞–ª–æ–≥–∏</h2>
  
        <div className="flex items-center gap-2 mb-4 text-sm">
          <input
            type="checkbox"
            checked={useDetailedCost}
            onChange={() => setUseDetailedCost(!useDetailedCost)}
            id="useDetailedCost"
          />
          <label htmlFor="useDetailedCost">–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏</label>
        </div>
  
        <h3 className="font-semibold text-base mb-1">–û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã</h3>
        <div className="grid grid-cols-1 sm:grid-cols-2 gap-3">
          <label>–í—ã—Ä—É—á–∫–∞ –æ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ (–í–†){input({ value: revenue, placeholder: "–ù–µ—Ç—Ç–æ-–≤—ã—Ä—É—á–∫–∞ (–±–µ–∑ –ù–î–°) = –í–†/1,2", onChange: e => setRevenue(e.target.value) })}</label>
          <label>–ö–æ—Å–≤–µ–Ω–Ω—ã–µ –Ω–∞–ª–æ–≥–∏ (–ö–ù){input({ value: indirect, onChange: e => setIndirect(e.target.value) })}</label>
  
          {!useDetailedCost && (
            <label>–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å (–°–°){input({ value: cost, onChange: e => setCost(e.target.value) })}</label>
          )}
        </div>
  
        {useDetailedCost && (
          <>
            <h3 className="font-semibold text-base mt-6 mb-1">–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏</h3>
            <div className="grid grid-cols-1 sm:grid-cols-2 gap-3">
              <label>–ó–∞–∫—É–ø–∫–∞ —Å—ã—Ä—å—è (–†√óQ){input({ value: materialCost, onChange: e => setMaterialCost(e.target.value) })}</label>
              <label>–í–æ–∑–≤—Ä–∞—Ç–Ω—ã–µ –æ—Ç—Ö–æ–¥—ã (P–æ—Ç—Ö√óQ–æ—Ç—Ö){input({ value: waste, onChange: e => setWaste(e.target.value) })}</label>
              <label>–§–æ–Ω–¥ –æ–ø–ª–∞—Ç—ã —Ç—Ä—É–¥–∞ (–§–û–¢){input({ value: salaryFund, onChange: e => setSalaryFund(e.target.value) })}</label>
              <label>–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –æ—Ç—á–∏—Å–ª–µ–Ω–∏—è (–°—Ç, %) {input({ value: socialRate, onChange: e => setSocialRate(e.target.value) })}</label>
              <label>–ê–º–æ—Ä—Ç–∏–∑–∞—Ü–∏—è (AO){input({ value: initAO, onChange: e => setAO(e.target.value) })}</label>
              <label>–ö—Ä–µ–¥–∏—Ç (–ö) {input({ value: creditAmount, onChange: e => setCreditAmount(e.target.value) })}</label>
              <label>–°—Ç–∞–≤–∫–∞ (d, %) {input({ value: creditRate, onChange: e => setCreditRate(e.target.value) })}</label>
              <label>–°—Ä–æ–∫ (t, –º–µ—Å) {input({ value: creditMonths, onChange: e => setCreditMonths(e.target.value) })}</label>
            </div>
          </>
        )}
  
        <h3 className="font-semibold text-base mt-6 mb-1">–ü—Ä–æ—á–∏–µ —Ä–∞—Å—Ö–æ–¥—ã –∏ —É–¥–µ—Ä–∂–∞–Ω–∏—è</h3>
        <div className="grid grid-cols-1 sm:grid-cols-2 gap-3">
          <label>–£–ø—Ä–∞–≤–ª–µ–Ω—á–µ—Å–∫–∏–µ —Ä–∞—Å—Ö–æ–¥—ã (–£–†){input({ value: mgmt, onChange: e => setMgmt(e.target.value) })}</label>
          <label>–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ —Ä–∞—Å—Ö–æ–¥—ã (–ö–†){input({ value: comm, onChange: e => setComm(e.target.value) })}</label>
          <label>–í–Ω–µ—Ä–µ–∞–ª–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–æ—Ö–æ–¥—ã (–î–í–û){input({ value: nonOpInc, onChange: e => setNonOpInc(e.target.value) })}</label>
          <label>–í–Ω–µ—Ä–µ–∞–ª–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã (–†–í–û){input({ value: nonOpExp, onChange: e => setNonOpExp(e.target.value) })}</label>
          <label>–ù–∞–ª–æ–≥–∏ (‚àë–ù –≤ —Ç.—á. –ù–î–°){input({ value: taxes, placeholder: "–ù–î–° = –ü –¥–æ –Ω/–æ * 0,2", onChange: e => setTaxes(e.target.value) })}</label>
          <label>–û—Ç—á–∏—Å–ª–µ–Ω–∏—è –≤ —Ñ–æ–Ω–¥—ã (–§){input({ value: funds, onChange: e => setFunds(e.target.value) })}</label>
        </div>
  
        {useDetailedCost && (
          <div className="mt-6 p-4 bg-blue-50 border border-blue-200 rounded text-sm space-y-3">
            <h4 className="font-semibold text-base">üßæ –†–∞—Å—á–µ—Ç —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏</h4>

            <div className="grid grid-cols-1 sm:grid-cols-2 gap-x-6 gap-y-2">
              <div>
                <strong>–ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã:</strong> {safe(MZ)}
                <div className="text-xs text-gray-500">{formulasCost.MZ}</div>
              </div>
              <div>
                <strong>–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –æ—Ç—á–∏—Å–ª–µ–Ω–∏—è:</strong> {safe(OSN)}
                <div className="text-xs text-gray-500">{formulasCost.OSN}</div>
              </div>
              <div>
                <strong>–ü–ª–∞—Ç–∞ –∑–∞ –∫—Ä–µ–¥–∏—Ç:</strong> {safe(PR)}
                <div className="text-xs text-gray-500">{formulasCost.PR}</div>
              </div>
              <div className="sm:col-span-2">
                <strong className="text-blue-700">–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å:</strong> {safe(detailedCost)}
                <div className="text-xs text-gray-500">{formulasCost.cost}</div>
              </div>
            </div>
          </div>
        )}
  
        <div className="relative mt-6 p-4 bg-white rounded shadow text-sm space-y-3">
          <h4 className="font-semibold text-base mb-1 pr-8">üìä –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç ( 
            <input
              id="precision"
              type="number"
              min={0}
              max={10}
              value={precision}
              onChange={(e) => setPrecision(Number(e.target.value))}
              className="w-8"
            />
          –∑–Ω–∞–∫–æ–≤)
          </h4>

          <button
            onClick={resetFields}
            className="absolute top-4 right-4 text-gray-600 hover:text-black"
            title="–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –ø–æ–ª—è"
          >
            <TbTrash className="text-xl" />
          </button>

          <div className="grid grid-cols-1 sm:grid-cols-2 gap-x-6 gap-y-3">
            <div>
              <strong>–í–∞–ª–æ–≤–∞—è –ø—Ä–∏–±—ã–ª—å:</strong> {safe(vp)}
              <div className="text-xs text-gray-500">{formulas.vp}</div>
            </div>
            <div>
              <strong>–ü—Ä–∏–±—ã–ª—å –æ—Ç –ø—Ä–æ–¥–∞–∂:</strong> {safe(pp)}
              <div className="text-xs text-gray-500">{formulas.pp}</div>
            </div>
            <div>
              <strong>Œî –í–Ω–µ—Ä–µ–∞–ª–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π:</strong> {safe(deltaVO)}
              <div className="text-xs text-gray-500">{formulas.deltaVO}</div>
            </div>
            <div>
              <strong>–ü—Ä–∏–±—ã–ª—å –¥–æ –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏—è:</strong> {safe(preTax)}
              <div className="text-xs text-gray-500">{formulas.preTax}</div>
            </div>
            <div>
              <strong>–ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å:</strong> {safe(np)}
              <div className="text-xs text-gray-500">{formulas.np}</div>
            </div>
            <div>
              <strong>–ù–µ—Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–∏–±—ã–ª—å:</strong> {safe(unrealized)}
              <div className="text-xs text-gray-500">{formulas.unrealized}</div>
            </div>
            <div className="sm:col-span-2">
              <strong className="text-green-700">üì¶ –û–ø—Ç–æ–≤–∞—è —Ü–µ–Ω–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è:</strong> {safe(wholesalePrice)}
              <div className="text-xs text-gray-500">{formulas.wholesale}</div>
            </div>
          </div>

          <div className="space-y-2 mt-6">
            {/* –û–ø—Ç–æ–≤–∞—è —Ü–µ–Ω–∞ */}
            <div className="text-xs font-medium text-gray-700">–û–ø—Ç–æ–≤–∞—è —Ü–µ–Ω–∞</div>
            <div className="relative h-5 rounded bg-gradient-to-r from-blue-200 to-blue-400 overflow-hidden">
              {/* 100% –ª–∏–Ω–∏—è */}
              <div className="absolute left-[100%] top-0 bottom-0 w-0.5 bg-gray-300 z-10" />

              {/* –ë–∞—Ä –æ–ø—Ç–æ–≤–æ–π —Ü–µ–Ω—ã */}
              <div
                className={`h-full transition-all duration-300 z-0 ${wholesaleWidth > 100 ? 'bg-red-500' : 'bg-blue-600'}`}
                style={{ width: `${Math.min(Math.abs(wholesaleWidth), 100)}%` }}
              />

              {/* Label */}
              <div className="absolute inset-0 flex items-center justify-end px-2 text-white text-xs font-semibold">
                {safe(wholesalePrice)}
              </div>
            </div>

            {/* –ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å */}
            <div className="text-xs font-medium text-gray-700">–ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å</div>
            <div className="relative h-5 rounded bg-gradient-to-r from-emerald-200 to-emerald-400 overflow-hidden">
              {/* 100% –ª–∏–Ω–∏—è */}
              <div className="absolute left-[100%] top-0 bottom-0 w-0.5 bg-gray-300 z-10" />

              {/* –ë–∞—Ä —á–∏—Å—Ç–æ–π –ø—Ä–∏–±—ã–ª–∏ */}
              <div
                className={`h-full transition-all duration-300 z-0 ${np < 0 ? 'bg-orange-500' : 'bg-emerald-600'}`}
                style={{ width: `${Math.min(Math.abs(npWidth), 100)}%` }}
              />

              {/* Label */}
              <div className="absolute inset-0 flex items-center justify-end px-2 text-white text-xs font-semibold">
                {safe(np)}
              </div>
            </div>

            {/* –õ–µ–≥–µ–Ω–¥–∞ */}
            <div className="flex justify-between text-xs text-gray-500 mt-1">
              <span>0%</span>
              <span>100% –æ—Ç –≤—ã—Ä—É—á–∫–∏ ({safe(vr)})</span>
            </div>
          </div>
        </div>
      </>
    );
  };